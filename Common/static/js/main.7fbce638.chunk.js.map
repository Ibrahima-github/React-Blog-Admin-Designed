{"version":3,"sources":["components/AddPost.jsx","components/EditPost.jsx","Navigation.js","Posts.jsx","components/AddCategorie.jsx","components/EditCategory.jsx","Categories.jsx","components/AddUtilisateur.jsx","components/EditUtilisateur.jsx","Utilisateurs.jsx","Home.js","Login.jsx","PrivateRoute.jsx","App.js","reportWebVitals.js","index.js"],"names":["AddPost","props","photofilename","imagesrc","process","REACT_APP_PHOTOPATH","state","category","handleSubmit","bind","handleFileSelected","fetch","then","response","json","data","setState","event","preventDefault","method","headers","body","JSON","stringify","PostName","target","value","Category","PostDescription","PostYoutubeHref","AdsTitle","AdsImageFileName","this","AdsLink","result","alert","catch","error","console","message","files","name","formData","FormData","append","log","className","Modal","size","centered","Header","Title","id","Body","Row","Col","sm","Form","onSubmit","Group","controlId","Label","Control","type","required","placeholder","as","map","CategoryName","CategoryId","Button","variant","Image","width","height","src","onChange","Footer","onClick","onHide","Component","EditPost","PostId","disabled","defaultValue","postid","postname","postcategory","postdescription","postyoutubehref","postimagefilename","Navigation","useState","redirect","setRedirect","Logout","a","credentials","to","href","title","style","justifyContent","margin","Posts","post","addModalShow","editModalShow","UtilisateurUsername","status","reverse","refreshList","window","confirm","header","postarticleuploaddate","editModalClose","marginTop","ButtonToolbar","show","Table","striped","bordered","hover","ArticleUploadDate","ImageFileName","deletePost","AddCategorie","EditCategory","categoryid","categoryname","Categories","deleteCategory","AddUtilisateur","UtilisateurEmailAddress","UtilisateurPassword","EditUtilisateur","UtilisateurId","utilisateurid","utilisateurname","utilisateuremailaddress","utilisateurpassword","Utilisateurs","utilisateur","Home","Login","setUtilisateurEmailAddress","setUtilisateurPassword","redirection","setRedirection","submit","e","content","PrivateRoute","component","isLoggedIn","rest","useEffect","userRequestResponse","userRequestContent","render","pathname","from","location","App","setIsLoggedIn","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7fbce638.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Modal, Button, Row, Col, Form, Image} from 'react-bootstrap';\r\n\r\n\r\nexport class AddPost extends Component  {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={category:[]};\r\n        this.handleSubmit= this.handleSubmit.bind(this);\r\n        this.handleFileSelected=this.handleFileSelected.bind(this);\r\n    }\r\n    \r\n    photofilename = \"anonymous.png\";\r\n    imagesrc = process.env.REACT_APP_PHOTOPATH+this.photofilename;\r\n\r\n    componentDidMount(){\r\n        fetch(process.env.REACT_APP_API+'categories' )\r\n        .then(response=> response.json())\r\n        .then(data => {\r\n            this.setState({category:data});\r\n        })\r\n        \r\n    }\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch(process.env.REACT_APP_API+'posts', {method:'POST',\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                PostName: event.target.PostName.value,\r\n                Category: event.target.Category.value,\r\n                PostDescription: event.target.PostDescription.value,\r\n                PostYoutubeHref: event.target.PostYoutubeHref.value,\r\n                AdsTitle : event.target.AdsTitle.value,\r\n                AdsImageFileName : this.imagesrc,\r\n                AdsLink : event.target.AdsLink.value})\r\n        })\r\n        .then(response => \r\n            response.json()\r\n        )\r\n        .then((result) => {\r\n            alert(result);\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message)\r\n        }); \r\n    }\r\n\r\n    handleFileSelected(event){\r\n        event.preventDefault();\r\n        this.photofilename=event.target.files[0].name;\r\n        const formData = new FormData();\r\n\r\n        formData.append(\r\n            \"myFile\",\r\n            event.target.files[0],\r\n            event.target.files[0].name\r\n        );\r\n\r\n        fetch(process.env.REACT_APP_API+'Posts/SaveFile', {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then((result) => {\r\n            this.imagesrc=process.env.REACT_APP_PHOTOPATH+result\r\n            console.log({result})\r\n        },\r\n        (error) => {\r\n            alert('Failed');\r\n        })\r\n        \r\n    }\r\n    \r\n    \r\n        render(){\r\n\r\n                return(\r\n                    <div className=\"container\">\r\n                        <Modal \r\n                        {...this.props}\r\n                            size=\"lg\"\r\n                            aria-labelledby=\"contained-modal-title-vcenter\"\r\n                            centered\r\n                        >\r\n                            <Modal.Header >\r\n                                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                    Ajouter un Post\r\n                                </Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <Row>\r\n                                    <Col sm={6}>\r\n                                        <Form  onSubmit={this.handleSubmit}>\r\n                                            <Form.Group controlId=\"Post\">\r\n                                                <Form.Label>Création d'un post</Form.Label>\r\n                                                <Form.Control \r\n                                                type=\"text\" \r\n                                                name=\"PostName\"\r\n                                                required\r\n                                                placeholder=\"Entrez un titre\"\r\n                                                />\r\n                                                <Form.Control as='select' name='Category'>\r\n                                                    {this.state.category.map(category=>\r\n                                                        <option key={category.CategoryId}>\r\n                                                            {category.CategoryName}\r\n                                                        </option>)}\r\n                                                </Form.Control>\r\n                                                <Form.Control \r\n                                                type=\"text\" \r\n                                                name=\"PostDescription\"\r\n                                                required\r\n                                                placeholder=\"Entrez une description\"\r\n                                                />\r\n                                                <Form.Control \r\n                                                type=\"text\" \r\n                                                name=\"PostYoutubeHref\"\r\n                                                required\r\n                                                placeholder=\"Entrez l'url youtube de la vidéo\"\r\n                                                />\r\n                                                <Form.Control \r\n                                                type=\"text\" \r\n                                                name=\"AdsTitle\"\r\n                                                required\r\n                                                placeholder=\"Entrez le titre de votre pub\"\r\n                                                />\r\n                                                <Form.Control \r\n                                                type=\"text\" \r\n                                                name=\"AdsLink\"\r\n                                                required\r\n                                                placeholder=\"Entrez l'url de votre pub\"\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Button variant=\"primary\" type=\"submit\">\r\n                                                    Ajouter un Post\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                        </Form>\r\n                                    </Col>\r\n                                    <Col sm={6}>\r\n                                        <Image \r\n                                            width=\"200px\"\r\n                                            height=\"200px\"\r\n                                            src={this.imagesrc}\r\n                                        />\r\n                                        <input \r\n                                            onChange={this.handleFileSelected}\r\n                                            type=\"File\"\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"danger\" onClick={this.props.onHide}>Fermer</Button>\r\n                            </Modal.Footer>\r\n                        </Modal> \r\n                    </div>\r\n            \r\n            );\r\n        }\r\n}\r\n\r\n\r\n//\r\n//headers:{\r\n //   'Accept':'application/json',\r\n //   'Content-Type':'application/json',\r\n //   \"Access-Control-Allow-Origin\": \"*\"\r\n//},","import React, { Component } from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\n\r\nexport class EditPost extends Component  {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit= this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch(process.env.REACT_APP_API+'posts', {method:'PUT',\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                PostId: event.target.PostId.value,\r\n                PostName: event.target.PostName.value,\r\n                Category: event.target.Category.value,\r\n                PostDescription: event.target.PostDescription.value,\r\n                PostYoutubeHref: event.target.PostYoutubeHref.value,\r\n                AdsTitle : event.target.AdsTitle.value,\r\n                AdsImageFileName : this.photofilename,\r\n                AdsLink : event.target.AdsLink.value})\r\n        })\r\n        .then(response => \r\n            response.json()\r\n        )\r\n        .then((result) => {\r\n            alert(result);\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message)\r\n        }); \r\n    }\r\n\r\n    \r\n    \r\n    \r\n        render(){\r\n\r\n                return(\r\n                    <div className=\"container\">\r\n                        <Modal \r\n                        {...this.props}\r\n                            size=\"lg\"\r\n                            aria-labelledby=\"contained-modal-title-vcenter\"\r\n                            centered\r\n                        >\r\n                            <Modal.Header >\r\n                                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                    Modifier une catégorie\r\n                                </Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <Row>\r\n                                    <Col sm={6}>\r\n                                        <Form  onSubmit={this.handleSubmit}>\r\n                                            <Form.Group controlId=\"CategoryId\">\r\n                                                <Form.Label>ID du post</Form.Label>\r\n                                                <Form.Control \r\n                                                type=\"text\" \r\n                                                name=\"PostId\"\r\n                                                required\r\n                                                disabled\r\n                                                defaultValue={this.props.postid}\r\n                                                />\r\n                                                \r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"PostName\">\r\n                                                <Form.Label>Titre du post</Form.Label>\r\n                                                <Form.Control \r\n                                                type=\"text\" \r\n                                                name=\"PostName\"\r\n                                                required\r\n                                                defaultValue={this.props.postname}\r\n                                                />\r\n                                                \r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"Category\">\r\n                                                <Form.Label>Categorie du post</Form.Label>\r\n                                                <Form.Control \r\n                                                type=\"text\" \r\n                                                name=\"Category\"\r\n                                                required\r\n                                                defaultValue={this.props.postcategory}\r\n                                                />\r\n                                                \r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"PostDescription\">\r\n                                                <Form.Label>Description du post</Form.Label>\r\n                                                <Form.Control \r\n                                                type=\"text\" \r\n                                                name=\"PostDescription\"\r\n                                                required\r\n                                                defaultValue={this.props.postdescription}\r\n                                                />\r\n                                                \r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"PostYoutubeHref\">\r\n                                                <Form.Label>Url de la vidéo</Form.Label>\r\n                                                <Form.Control \r\n                                                type=\"text\" \r\n                                                name=\"PostYoutubeHref\"\r\n                                                required\r\n                                                disabled\r\n                                                defaultValue={this.props.postyoutubehref}\r\n                                                />\r\n                                                \r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"ImageFileName\">\r\n                                                <Form.Label>Nom de l'image publicitaire</Form.Label>\r\n                                                <Form.Control \r\n                                                type=\"text\" \r\n                                                name=\"ImageFileName\"\r\n                                                required\r\n                                                defaultValue={this.props.postimagefilename}\r\n                                                />\r\n                                                \r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Button variant=\"primary\" type=\"submit\">\r\n                                                    Mettre à jour\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                        </Form>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"danger\" onClick={this.props.onHide}>Fermer</Button>\r\n                            </Modal.Footer>\r\n                        </Modal> \r\n                    </div>\r\n            \r\n            );\r\n        }\r\n}\r\n\r\n","import React, { useState} from 'react';\r\nimport {  Button } from 'react-bootstrap';\r\nimport {Link, Redirect} from 'react-router-dom';\r\n\r\n\r\n export const Navigation = () => {\r\n\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n   const Logout = async () =>{\r\n    const response = await fetch(process.env.REACT_APP_API + 'utilisateurs/logout', {\r\n        method: \"POST\",\r\n        headers:{'Content-type': 'application/json', 'Accept': 'application/json'},\r\n        credentials: \"include\"\r\n    })\r\n    console.log(response);\r\n    setRedirect(true);\r\n}\r\nif(redirect){\r\n\r\n  return <Redirect to=\"/\" />\r\n}\r\n        return(\r\n            <nav id=\"nav-wrap\">\r\n              \r\n              <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\r\n                Show navigation\r\n              </a>\r\n              <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">\r\n                Hide navigation\r\n              </a>\r\n              \r\n              <ul id=\"nav\" className=\"nav\" style={{justifyContent:'center'}}>\r\n                \r\n                <li className=\"current\">\r\n                    <Link to=\"/posts\">\r\n                        Posts\r\n                    </Link>\r\n                </li>\r\n    \r\n                <li>\r\n                <Link to=\"/categories\">\r\n                        Catégories\r\n                    </Link>\r\n                </li>\r\n    \r\n                <li>\r\n                <Link to=\"/utilisateurs\">\r\n                        Utilisateurs\r\n                    </Link>\r\n                </li>\r\n    \r\n                <li>\r\n                 <a href=\"https://ibrahimasall.com\" target=\"_blank\">\r\n                    Réalisations\r\n                  </a> \r\n                </li>\r\n    \r\n                <li>\r\n                  <a  href=\"https://blog.ibrahimasall.com\" target=\"_blank\">\r\n                    Blog\r\n                  </a>\r\n                </li>\r\n    \r\n                <li style={{margin:10}}>\r\n                  <Button onClick={Logout}>\r\n                      Logout\r\n                  </Button>\r\n                </li>\r\n              </ul>\r\n              \r\n            </nav>\r\n        )\r\n    }","\r\nimport React, { Component} from 'react';\r\nimport { AddPost } from './components/AddPost';\r\nimport { EditPost } from './components/EditPost';\r\nimport {Button, ButtonToolbar, Table} from 'react-bootstrap';\r\nimport { Navigation } from './Navigation';\r\n\r\n class Posts extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={post:[], addModalShow: false, editModalShow: false, UtilisateurUsername: false};\r\n    }\r\n    \r\n \r\n   refreshList(){\r\n\r\n    \r\n       fetch(process.env.REACT_APP_API+'posts')\r\n           .then(response => {\r\n               console.log(response);\r\n               if(response.status === 200){\r\n                  return response.json()\r\n               }\r\n               console.log(response.status);\r\n               throw response;\r\n           }    )\r\n           .then(data => {\r\n               console.log(data);\r\n               this.setState({post:data.reverse()});\r\n           })\r\n           .catch(error => {\r\n               console.error(error.message)\r\n           }); \r\n   }\r\n\r\n   componentDidMount(){\r\n       this.refreshList();\r\n   }\r\n\r\n   componentDidUpdate(){\r\n       this.refreshList();\r\n   }\r\n\r\n   deletePost(postid){\r\n       if(window.confirm('Êtes vous sûr de vouloir supprimer ?')){\r\n           fetch(process.env.REACT_APP_API + 'posts/' + postid, {\r\n               method: 'DELETE',\r\n               header: {\r\n                   'Accept': 'application/json',\r\n                   'Content-Type': 'application/json'\r\n               }\r\n           })\r\n           .then(response => response.json())\r\n           .then(result => {\r\n               alert(result);\r\n           })\r\n       }\r\n   }\r\n\r\n   \r\n   render(){\r\n            const { post, postid, postname, postcategory, postarticleuploaddate, postdescription, postyoutubehref, postimagefilename} = this.state;\r\n            let addModalClose = () => this.setState({addModalShow:false});\r\n            let editModalClose = () => this.setState({editModalShow:false});\r\n\r\n            return(\r\n             <div>\r\n                 <nav id=\"nav-wrap\">\r\n          \r\n          <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\r\n            Show navigation\r\n          </a>\r\n          <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">\r\n            Hide navigation\r\n          </a>\r\n                \r\n        <Navigation />\r\n                 </nav>  <div style={{marginTop:60,justifyContent: 'center'}}>\r\n\r\n                        <h3>This is Posts page</h3>\r\n                        <div className=\"mt-5 d-flex justify-content-right\">\r\n                        <ButtonToolbar>\r\n                            <Button \r\n                                variant='primary'\r\n                                onClick={() => this.setState({addModalShow:true})}>\r\n                                    Ajouter un post\r\n                                </Button>\r\n                                <AddPost show={this.state.addModalShow}\r\n                                    onHide={addModalClose} />\r\n                        </ButtonToolbar>\r\n                        </div>\r\n                        <div className=\"mt-5 d-flex justify-content-left\">\r\n                        <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n                            <thead>\r\n                                <tr className='m-2'>\r\n                                    <th>Post Id</th>\r\n                                    <th>Post Name</th>\r\n                                    <th>Category</th>\r\n                                    <th>Article upload date</th>\r\n                                    <th>Post Description</th>\r\n                                    <th>Post Youtube Href</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {post.map(post=>\r\n                                    <tr key={post.PostId}>\r\n                                    <td>{post.PostId}</td>\r\n                                    <td>{post.PostName}</td>\r\n                                    <td>{post.Category}</td>\r\n                                    <td>{post.ArticleUploadDate}</td>\r\n                                    <td>{post.PostDescription}</td>\r\n                                    <td>{post.PostYoutubeHref}</td>\r\n                                    <td>{post.ImageFileName}</td>\r\n                                    <td>\r\n                                        <ButtonToolbar>\r\n                                            <Button \r\n                                                className=\"mr-2\" \r\n                                                variant=\"info\"\r\n                                                onClick={() => this.setState({\r\n                                                    editModalShow:true, postid: post.PostId, postname:post.PostName,\r\n                                                    postcategory: post.Category, postarticleuploaddate: post.ArticleUploadDate,\r\n                                                     postdescription: post.PostDescription,\r\n                                                    postyoutubehref: post.PostYoutubeHref, postimagefilename: post.ImageFileName\r\n                                                })}>Modifier\r\n                                            </Button>\r\n\r\n                                            <Button \r\n                                                className=\"mr-2\" \r\n                                                variant=\"danger\"\r\n                                                onClick={() => \r\n                                                this.deletePost(post.PostId)\r\n                                                }>Supprimer\r\n                                            </Button>\r\n\r\n                                            <EditPost\r\n                                                show={this.state.editModalShow}\r\n                                                onHide={editModalClose}\r\n                                                postid={postid}\r\n                                                postname={postname}\r\n                                                postcategory={postcategory}\r\n                                                postarticleuploaddate={postarticleuploaddate}\r\n                                                postdescription={postdescription}\r\n                                                postyoutubehref={postyoutubehref}\r\n                                                postimagefilename={postimagefilename}\r\n                                            />\r\n                                        </ButtonToolbar>\r\n                                    </td>\r\n                                    </tr>)}\r\n                            </tbody>\r\n                        </Table>\r\n    \r\n                        \r\n                    </div>\r\n                 </div>\r\n                </div>   )\r\n        }\r\n\r\n    }\r\n\r\n    export default Posts;","import React, { Component } from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\n\r\nexport class AddCategorie extends Component  {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit= this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch(process.env.REACT_APP_API+'categories', {method:'POST',\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                CategoryName: event.target.CategoryName.value})\r\n        })\r\n        .then(response => \r\n            \r\n            response.json()\r\n        )\r\n        .then((result) => {\r\n            alert(result);\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message)\r\n        }); \r\n    }\r\n\r\n    \r\n    \r\n    \r\n        render(){\r\n\r\n                return(\r\n                    <div className=\"container\">\r\n                        <Modal \r\n                        {...this.props}\r\n                            size=\"lg\"\r\n                            aria-labelledby=\"contained-modal-title-vcenter\"\r\n                            centered\r\n                        >\r\n                            <Modal.Header >\r\n                                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                    Ajouter une catégorie\r\n                                </Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <Row>\r\n                                    <Col sm={6}>\r\n                                        <Form  onSubmit={this.handleSubmit}>\r\n                                            <Form.Group controlId=\"CategoryName\">\r\n                                                <Form.Label>Nom de catégorie</Form.Label>\r\n                                                <Form.Control \r\n                                                type=\"text\" \r\n                                                name=\"CategoryName\"\r\n                                                required\r\n                                                placeholder=\"Entrez une catégorie\"\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Button variant=\"primary\" type=\"submit\">\r\n                                                    Ajouter une catégorie\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                        </Form>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"danger\" onClick={this.props.onHide}>Fermer</Button>\r\n                            </Modal.Footer>\r\n                        </Modal> \r\n                    </div>\r\n            \r\n            );\r\n        }\r\n}\r\n\r\n\r\n//\r\n//headers:{\r\n //   'Accept':'application/json',\r\n //   'Content-Type':'application/json',\r\n //   \"Access-Control-Allow-Origin\": \"*\"\r\n//},","import React, { Component } from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\n\r\nexport class EditCategory extends Component  {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit= this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch(process.env.REACT_APP_API+'categories', {method:'PUT',\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                CategoryId: event.target.CategoryId.value,\r\n                CategoryName: event.target.CategoryName.value})\r\n        })\r\n        .then(response => \r\n            response.json()\r\n        )\r\n        .then((result) => {\r\n            alert(result);\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message)\r\n        }); \r\n    }\r\n\r\n    \r\n    \r\n    \r\n        render(){\r\n\r\n                return(\r\n                    <div className=\"container\">\r\n                        <Modal \r\n                        {...this.props}\r\n                            size=\"lg\"\r\n                            aria-labelledby=\"contained-modal-title-vcenter\"\r\n                            centered\r\n                        >\r\n                            <Modal.Header >\r\n                                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                    Modifier une catégorie\r\n                                </Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <Row>\r\n                                    <Col sm={6}>\r\n                                        <Form  onSubmit={this.handleSubmit}>\r\n                                            <Form.Group controlId=\"CategoryId\">\r\n                                                <Form.Label>ID de catégorie</Form.Label>\r\n                                                <Form.Control \r\n                                                type=\"text\" \r\n                                                name=\"CategoryId\"\r\n                                                required\r\n                                                disabled\r\n                                                defaultValue={this.props.categoryid}\r\n                                                />\r\n                                                \r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"CategoryName\">\r\n                                                <Form.Label>Nom de catégorie</Form.Label>\r\n                                                <Form.Control \r\n                                                type=\"text\" \r\n                                                name=\"CategoryName\"\r\n                                                required\r\n                                                defaultValue={this.props.categoryname}\r\n                                                />\r\n                                                \r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Button variant=\"primary\" type=\"submit\">\r\n                                                    Mettre à jour\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                        </Form>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"danger\" onClick={this.props.onHide}>Fermer</Button>\r\n                            </Modal.Footer>\r\n                        </Modal> \r\n                    </div>\r\n            \r\n            );\r\n        }\r\n}\r\n\r\n","\r\nimport React, { Component} from 'react';\r\nimport { AddCategorie } from './components/AddCategorie';\r\nimport { EditCategory } from './components/EditCategory';\r\nimport {Button, ButtonToolbar, Table} from 'react-bootstrap';\r\nimport { Navigation } from './Navigation';\r\nimport './App.css';\r\n\r\n class Categories extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={category:[], addModalShow: false, editModalShow: false};\r\n    }\r\n \r\n    \r\n   refreshList(){\r\n\r\n    \r\n    \r\n       fetch(process.env.REACT_APP_API+'categories')\r\n           .then(response => {\r\n               console.log(response);\r\n               if(response.status === 200){\r\n                  return response.json()\r\n               }\r\n               console.log(response.status);\r\n               throw response;\r\n           }    )\r\n           .then(data => {\r\n               console.log(data);\r\n               this.setState({category:data.reverse()});\r\n           })\r\n           .catch(error => {\r\n               console.error(error.message)\r\n           }); \r\n   }\r\n\r\n   componentDidMount(){\r\n       \r\n       this.refreshList();\r\n   }\r\n   componentDidUpdate(){\r\n    this.refreshList();\r\n}\r\n\r\n   deleteCategory(categoryid){\r\n       if(window.confirm('Êtes vous sûr de vouloir supprimer ?')){\r\n           fetch(process.env.REACT_APP_API + 'categories/' + categoryid, {\r\n               method: 'DELETE',\r\n               header: {\r\n                   'Accept': 'application/json',\r\n                   'Content-Type': 'application/json'\r\n               }\r\n           })\r\n           .then(response => response.json())\r\n           .then(result => {\r\n               alert(result);\r\n           })\r\n       }\r\n   }\r\n\r\n   \r\n   render(){\r\n            const { category, categoryid, categoryname} = this.state;\r\n            let addModalClose = () => this.setState({addModalShow:false});\r\n            let editModalClose = () => this.setState({editModalShow:false});\r\n        \r\n            return(\r\n             \r\n                <div>\r\n                    <Navigation />\r\n                    <div style={{marginTop:60, justifyContent: 'center'}}>\r\n\r\n                        <h3>\r\n\r\n                        This is Categories page\r\n                        </h3>\r\n                        <div className=\"mt-5 d-flex justify-content-right\">\r\n                        <ButtonToolbar>\r\n                            <Button \r\n                                variant='primary'\r\n                                onClick={() => this.setState({addModalShow:true})}>\r\n                                    Ajouter une catégorie\r\n                                </Button>\r\n                                <AddCategorie show={this.state.addModalShow}\r\n                                    onHide={addModalClose} />\r\n                        </ButtonToolbar>\r\n                        </div>\r\n                        <div className=\"mt-5 d-flex justify-content-left\">\r\n                        <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Category Id</th>\r\n                                    <th>Category Name</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {category.map(category=>\r\n                                    <tr key={category.CategoryId} className='m-2'>\r\n                                    <td>{category.CategoryId}</td>\r\n                                    <td>{category.CategoryName}</td>\r\n                                    <td>\r\n                                        <ButtonToolbar>\r\n                                            <Button \r\n                                                className=\"mr-2\" \r\n                                                variant=\"info\"\r\n                                                onClick={() => this.setState({\r\n                                                    editModalShow:true, categoryid: category.CategoryId, categoryname:category.CategoryName\r\n                                                })}>Modifier\r\n                                            </Button>\r\n\r\n                                            <Button \r\n                                                className=\"mr-2\" \r\n                                                variant=\"danger\"\r\n                                                onClick={() => \r\n                                                this.deleteCategory(category.CategoryId)\r\n                                                }>Supprimer\r\n                                            </Button>\r\n\r\n                                            <EditCategory\r\n                                                show={this.state.editModalShow}\r\n                                                onHide={editModalClose}\r\n                                                categoryid={categoryid}\r\n                                                categoryname={categoryname}\r\n                                            />\r\n                                        </ButtonToolbar>\r\n                                    </td>\r\n                                    </tr>)}\r\n                            </tbody>\r\n                        </Table>\r\n    \r\n                        \r\n                    </div>\r\n                    </div>\r\n                </div>   )\r\n        }\r\n\r\n    }\r\n\r\n    export default Categories;","import React, { Component } from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\n\r\nexport class AddUtilisateur extends Component  {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit= this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch(process.env.REACT_APP_API+'utilisateurs', {method:'POST',\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                UtilisateurUsername: event.target.UtilisateurUsername.value,\r\n                UtilisateurEmailAddress: event.target.UtilisateurEmailAddress.value,\r\n                UtilisateurPassword: event.target.UtilisateurPassword.value})\r\n        })\r\n        .then(response => \r\n            response.json()\r\n        )\r\n        .then((result) => {\r\n            alert(result);\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message)\r\n        }); \r\n    }\r\n\r\n    \r\n    \r\n    \r\n        render(){\r\n\r\n                return(\r\n                    <div className=\"container\">\r\n                        <Modal \r\n                        {...this.props}\r\n                            size=\"lg\"\r\n                            aria-labelledby=\"contained-modal-title-vcenter\"\r\n                            centered\r\n                        >\r\n                            <Modal.Header >\r\n                                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                    Ajouter un utilisateur\r\n                                </Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <Row>\r\n                                    <Col sm={6}>\r\n                                        <Form  onSubmit={this.handleSubmit}>\r\n                                            <Form.Group controlId=\"Utilisateur\">\r\n                                                <Form.Label>Création d'un utilisateur</Form.Label>\r\n                                                <Form.Control \r\n                                                type=\"text\" \r\n                                                name=\"UtilisateurUsername\"\r\n                                                required\r\n                                                placeholder=\"Entrez votre nom\"\r\n                                                />\r\n                                                <Form.Control \r\n                                                type=\"email\" \r\n                                                name=\"UtilisateurEmailAddress\"\r\n                                                required\r\n                                                placeholder=\"Entrez votre adresse mail\"\r\n                                                />\r\n                                                <Form.Control \r\n                                                type=\"password\" \r\n                                                name=\"UtilisateurPassword\"\r\n                                                required\r\n                                                placeholder=\"Entrez un mot de passe\"\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Button variant=\"primary\" type=\"submit\">\r\n                                                    Ajouter un utilisateur\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                        </Form>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"danger\" onClick={this.props.onHide}>Fermer</Button>\r\n                            </Modal.Footer>\r\n                        </Modal> \r\n                    </div>\r\n            \r\n            );\r\n        }\r\n}\r\n\r\n\r\n//\r\n//headers:{\r\n //   'Accept':'application/json',\r\n //   'Content-Type':'application/json',\r\n //   \"Access-Control-Allow-Origin\": \"*\"\r\n//},","import React, { Component } from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\n\r\nexport class EditUtilisateur extends Component  {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit= this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch(process.env.REACT_APP_API+'utilisateurs', {method:'PUT',\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                UtilisateurId: event.target.UtilisateurId.value,\r\n                UtilisateurUsername: event.target.UtilisateurUsername.value,\r\n                UtilisateurEmailAddress: event.target.UtilisateurEmailAddress.value,\r\n                UtilisateurPassword: event.target.UtilisateurPassword.value})\r\n        })\r\n        .then(response => \r\n            response.json()\r\n        )\r\n        .then((result) => {\r\n            alert(result);\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message)\r\n        }); \r\n    }\r\n\r\n    \r\n    \r\n    \r\n        render(){\r\n\r\n                return(\r\n                    <div className=\"container\">\r\n                        <Modal \r\n                        {...this.props}\r\n                            size=\"lg\"\r\n                            aria-labelledby=\"contained-modal-title-vcenter\"\r\n                            centered\r\n                        >\r\n                            <Modal.Header >\r\n                                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                    Modifier les infos d'un utilisateur\r\n                                </Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <Row>\r\n                                    <Col sm={6}>\r\n                                        <Form  onSubmit={this.handleSubmit}>\r\n                                            <Form.Group controlId=\"UtilisateurId\">\r\n                                                <Form.Label>ID de l'utilisateur</Form.Label>\r\n                                                <Form.Control \r\n                                                type=\"text\" \r\n                                                name=\"UtilisateurId\"\r\n                                                required\r\n                                                disabled\r\n                                                defaultValue={this.props.utilisateurid}\r\n                                                />\r\n                                                \r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"UtilisateurUsername\">\r\n                                                <Form.Label>Nom de l'utilisateur</Form.Label>\r\n                                                <Form.Control \r\n                                                type=\"text\" \r\n                                                name=\"UtilisateurUsername\"\r\n                                                required\r\n                                                defaultValue={this.props.utilisateurname}\r\n                                                />\r\n                                                \r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"UtilisateurEmailAddress\">\r\n                                                <Form.Label>Adresse email de l'utilisateur</Form.Label>\r\n                                                <Form.Control \r\n                                                type=\"text\" \r\n                                                name=\"UtilisateurEmailAddress\"\r\n                                                required\r\n                                                defaultValue={this.props.utilisateuremailaddress}\r\n                                                />\r\n                                                \r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"UtilisateurPassword\">\r\n                                                <Form.Label>Entrez un  mot de passe</Form.Label>\r\n                                                <Form.Control \r\n                                                type=\"password\" \r\n                                                name=\"UtilisateurPassword\"\r\n                                                required\r\n                                                defaultValue={this.props.utilisateurpassword}\r\n                                                />\r\n                                                \r\n                                            </Form.Group>\r\n                                           \r\n                                            <Form.Group>\r\n                                                <Button variant=\"primary\" type=\"submit\">\r\n                                                    Mettre à jour\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                        </Form>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"danger\" onClick={this.props.onHide}>Fermer</Button>\r\n                            </Modal.Footer>\r\n                        </Modal> \r\n                    </div>\r\n            \r\n            );\r\n        }\r\n}\r\n\r\n","\r\nimport React, { Component} from 'react';\r\nimport { AddUtilisateur } from './components/AddUtilisateur';\r\nimport { EditUtilisateur } from './components/EditUtilisateur';\r\nimport {Button, ButtonToolbar, Table} from 'react-bootstrap';\r\nimport { Navigation } from './Navigation';\r\nimport './App.css';\r\n\r\n class Utilisateurs extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={utilisateur:[], addModalShow: false, editModalShow: false, UtilisateurUsername: false};\r\n    }\r\n \r\n   refreshList(){\r\n    \r\n    \r\n       fetch(process.env.REACT_APP_API+'utilisateurs')\r\n           .then(response => {\r\n               console.log(response);\r\n               if(response.status === 200){\r\n                  return response.json()\r\n               }\r\n               console.log(response.status);\r\n               throw response;\r\n           }    )\r\n           .then(data => {\r\n               console.log(data);\r\n               this.setState({utilisateur:data.reverse()});\r\n           })\r\n           .catch(error => {\r\n               console.error(error.message)\r\n           }); \r\n   }\r\n\r\n   componentDidMount(){\r\n       this.refreshList();\r\n   }\r\n\r\n   componentDidUpdate(){\r\n    this.refreshList();\r\n}\r\n   deletePost(postid){\r\n       if(window.confirm('Êtes vous sûr de vouloir supprimer ?')){\r\n           fetch(process.env.REACT_APP_API + 'utilisateurs/' + postid, {\r\n               method: 'DELETE',\r\n               header: {\r\n                   'Accept': 'application/json',\r\n                   'Content-Type': 'application/json'\r\n               }\r\n           })\r\n           .then(response => response.json())\r\n           .then(result => {\r\n               alert(result);\r\n           })\r\n       }\r\n   }\r\n\r\n   \r\n   render(){\r\n            const { utilisateur, utilisateurid, utilisateurname, utilisateuremailaddress, utilisateurpassword} = this.state;\r\n            let addModalClose = () => this.setState({addModalShow:false});\r\n            let editModalClose = () => this.setState({editModalShow:false});\r\n\r\n            return(\r\n             \r\n                <div>\r\n        <Navigation />\r\n                    <div style={{marginTop:60, justifyContent: 'center'}} >\r\n\r\n                        <h3>\r\n                        This is Posts page\r\n                            </h3>\r\n                        <div className=\"mt-5 d-flex justify-content-right\">\r\n                        <ButtonToolbar>\r\n                            <Button \r\n                                variant='primary'\r\n                                onClick={() => this.setState({addModalShow:true})}>\r\n                                    Ajouter un utilisateur\r\n                                </Button>\r\n                                <AddUtilisateur show={this.state.addModalShow}\r\n                                    onHide={addModalClose} />\r\n                        </ButtonToolbar>\r\n                        </div>\r\n                        <div className=\"mt-5 d-flex justify-content-left\">\r\n                        <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n                            <thead>\r\n                                <tr className='m-2'>\r\n                                    <th>Utilisateur Id</th>\r\n                                    <th>Utilisateur Name</th>\r\n                                    <th>Utilisateur Email Address</th>\r\n                                    <th>Utilisateur Password </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {utilisateur.map(utilisateur=>\r\n                                    <tr key={utilisateur.UtilisateurId}>\r\n                                    <td>{utilisateur.UtilisateurId}</td>\r\n                                    <td>{utilisateur.UtilisateurUsername}</td>\r\n                                    <td>{utilisateur.UtilisateurEmailAddress}</td>\r\n                                    <td>{utilisateur.UtilisateurPassword}</td>\r\n                                    <td>\r\n                                        <ButtonToolbar>\r\n                                            <Button \r\n                                                className=\"mr-2\" \r\n                                                variant=\"info\"\r\n                                                onClick={() => this.setState({\r\n                                                    editModalShow:true, utilisateurid: utilisateur.UtilisateurId, utilisateurname:utilisateur.UtilisateurUsername,\r\n                                                    utilisateuremailaddress: utilisateur.UtilisateurEmailAddress, utilisateurpassword: utilisateur.UtilisateurPassword\r\n                                                })}>Modifier\r\n                                            </Button>\r\n\r\n                                            <Button \r\n                                                className=\"mr-2\" \r\n                                                variant=\"danger\"\r\n                                                onClick={() => \r\n                                                this.deletePost(utilisateur.UtilisateurId)\r\n                                                }>Supprimer\r\n                                            </Button>\r\n\r\n                                            <EditUtilisateur\r\n                                                show={this.state.editModalShow}\r\n                                                onHide={editModalClose}\r\n                                                utilisateurid={utilisateurid}\r\n                                                utilisateurname={utilisateurname}\r\n                                                utilisateuremailaddress={utilisateuremailaddress}\r\n                                                utilisateurpassword={utilisateurpassword}\r\n                                            />\r\n                                        </ButtonToolbar>\r\n                                    </td>\r\n                                    </tr>)}\r\n                            </tbody>\r\n                        </Table>\r\n    \r\n                        \r\n                    </div>\r\n                    </div>\r\n                </div>   )\r\n        }\r\n\r\n    }\r\n\r\n    export default Utilisateurs;","import React from 'react';\r\nimport { Navigation } from './Navigation';\r\n\r\n const Home = () => {\r\n \r\n  \r\n \r\n\r\n  return(\r\n    <div className=\"contentCss\">\r\n\r\n    <div>\r\n\r\n      <Navigation />\r\n    </div>\r\n    <div className=\"mt-5 d-flex justify-content-left\">\r\n                This is HomePage\r\n\r\n            </div>\r\n    </div>\r\n  );\r\n    \r\n}\r\n\r\nexport default Home;","import React, {  useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\n\r\n const Login = () => {\r\n\r\n  const [UtilisateurEmailAddress, setUtilisateurEmailAddress] = useState('');\r\n  const [UtilisateurPassword, setUtilisateurPassword] = useState('');\r\n  const [redirection, setRedirection] = useState(false);\r\n  \r\n\r\n  const submit = async(e) => {\r\n    e.preventDefault();\r\n\r\n    const response = await fetch(process.env.REACT_APP_API + 'utilisateurs/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials:\"include\",\r\n      body: JSON.stringify({\r\n        UtilisateurEmailAddress,\r\n        UtilisateurPassword\r\n      })\r\n      \r\n    });\r\n\r\n    const content = await response.json();\r\n    \r\n    if(content.message === 'success'){\r\n      setRedirection(true);\r\n    }else{\r\n      alert(content.message);\r\n    }\r\n    console.log(content);\r\n    \r\n    \r\n  }\r\n        \r\n  if(redirection){\r\n    return <Redirect to=\"/home\" />\r\n  }  \r\n          \r\n\r\n \r\n\r\n    return (\r\n      <div className=\"Login\">\r\n        <main className=\"form-signin\">\r\n          <form onSubmit={submit}>\r\n            <h1 className=\"h3 mb-3 fw-normal\">Please sign in</h1>\r\n\r\n            <div className=\"form-floating\">\r\n              <input \r\n                type=\"email\" \r\n                className=\"form-control\" \r\n                id=\"floatingInput\" \r\n                placeholder=\"name@example.com\" \r\n                onChange={e => setUtilisateurEmailAddress(e.target.value)} />\r\n              <label >Email address</label>\r\n            </div>\r\n            <div className=\"form-floating\">\r\n              <input \r\n                type=\"password\" \r\n                className=\"form-control\" \r\n                id=\"floatingPassword\" \r\n                placeholder=\"Password\" \r\n                onChange={e => setUtilisateurPassword(e.target.value)}  />\r\n              <label >Password</label>\r\n            </div>\r\n\r\n            <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">Sign in</button>\r\n\r\n          </form>\r\n        </main>\r\n      </div>\r\n\r\n    );\r\n \r\n}\r\n\r\nexport default Login;","import React, {useEffect, useState} from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({ component: Component, isLoggedIn, ...rest }) => {\r\n\r\n  \r\n  \r\n  //const [redirect, setRedirect] = useState(false);\r\n\r\n  //useEffect()\r\n  useEffect(() => async () => {\r\n    const userRequestResponse = await fetch(process.env.REACT_APP_API + 'utilisateurs/user', {\r\n      headers: { 'Content-Type': 'application/json'},\r\n      credentials: 'include'\r\n    });\r\n    \r\n    console.log(userRequestResponse);\r\n    \r\n     const userRequestContent = await userRequestResponse.json();\r\n     \r\n     console.log(userRequestContent.message);\r\n     \r\n        if(userRequestContent.message === 'Authenticated'){\r\n         // return <Component />\r\n          return isLoggedIn = true;\r\n          \r\n        }else{\r\n            alert(userRequestContent.message);\r\n           // <Redirect to=\"/\" />\r\n           // setRedirect(true);\r\n           return isLoggedIn = false;\r\n        }\r\n        /* if(redirect){\r\n            return <Redirect to='/login' />\r\n        } */\r\n        //return isLoggedIn;\r\n  }\r\n)\r\n    \r\n        \r\n        return (\r\n    <Route\r\n      {...rest}\r\n      render={props => \r\n        isLoggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={{ pathname: '/', state: { from: props.location } }} />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute","import React, {useEffect, useState} from 'react';\r\nimport Posts from './Posts';\r\nimport Categories from './Categories';\r\nimport Utilisateurs from './Utilisateurs';\r\nimport Home from './Home';\r\nimport Login from './Login';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport { AddCategorie } from './components/AddCategorie';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\n\r\nfunction App() {\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n \r\n    \r\n    return (\r\n      <BrowserRouter>\r\n      \r\n            \r\n                <Switch>\r\n                    \r\n                    < Route path=\"/\" component={Login} exact />\r\n                    <PrivateRoute isLoggedIn={setIsLoggedIn} path='/home'  component={Home}  />\r\n                    <PrivateRoute isLoggedIn={setIsLoggedIn}  path='/posts' component={Posts} />\r\n                    <PrivateRoute isLoggedIn={setIsLoggedIn}  path='/utilisateurs' component={Utilisateurs} />\r\n                    <PrivateRoute isLoggedIn={setIsLoggedIn}   path='/addCategorie' component={AddCategorie} />\r\n                    <PrivateRoute isLoggedIn={setIsLoggedIn}  path='/categories' component={Categories} />\r\n                    <Route path='*' component={() => <h1>Erreur 404! Désolé, cette page n'existe pas.</h1>} />\r\n                </Switch>\r\n           \r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}